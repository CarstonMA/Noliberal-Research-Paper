plots <- list()
shared_legend <- NULL
# Temporary plot to extract the shared legend
tmp_plot <- NULL
for (i in seq_along(variable_labels)) {
var <- names(variable_labels)[i]
pretty <- variable_labels[[i]]
df <- data_did %>%
filter(!is.na(!!sym(var)), !is.na(Heritage_Score)) %>%
mutate(Y = !!sym(var))
ols_model <- lm(Y ~ Heritage_Score, data = df)
fe_model <- plm(Y ~ Heritage_Score, data = df, index = c("ISO3", "Year"), model = "within")
ols_slope <- coef(ols_model)["Heritage_Score"]
fe_slope <- coef(fe_model)["Heritage_Score"]
x_vals <- seq(min(df$Heritage_Score), max(df$Heritage_Score), length.out = 100)
lines_data <- data.frame(
x = rep(x_vals, 2),
y = c(coef(ols_model)[1] + ols_slope * x_vals,
mean(df$Y) + fe_slope * (x_vals - mean(df$Heritage_Score))),
Model = rep(c("OLS", "Fixed Effects"), each = 100)
)
p <- ggplot(df, aes(x = Heritage_Score, y = Y)) +
geom_point(alpha = 0.4, size = 1.3) +
geom_line(data = lines_data, aes(x = x, y = y, color = Model, linetype = Model), size = 1) +
scale_color_manual(values = c("OLS" = "black", "Fixed Effects" = "#E41A1C")) +
scale_linetype_manual(values = c("OLS" = "dashed", "Fixed Effects" = "solid")) +
labs(
title = pretty,
x = "Heritage Score",
y = NULL,
color = "Model",
linetype = "Model"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 11, face = "bold"),
legend.position = "none"  # ensure no legend in the grid plots
)
plots[[pretty]] <- p
# Capture the first plot to extract legend later
if (is.null(tmp_plot)) {
tmp_plot <- ggplot(df, aes(x = Heritage_Score, y = Y)) +
geom_point(alpha = 0.4, size = 1.3) +
geom_line(data = lines_data, aes(x = x, y = y, color = Model, linetype = Model), size = 1) +
scale_color_manual(values = c("OLS" = "black", "Fixed Effects" = "#E41A1C")) +
scale_linetype_manual(values = c("OLS" = "dashed", "Fixed Effects" = "solid")) +
labs(
color = "Model",
linetype = "Model"
) +
theme(legend.position = "bottom")
}
}
# Extract shared legend
g <- ggplotGrob(tmp_plot)
shared_legend <- g$grobs[[which(sapply(g$grobs, function(x) x$name) == "guide-box")]]
# Combine grid + legend
panel_with_legend <- grid.arrange(
arrangeGrob(grobs = plots, ncol = 3),
shared_legend,
nrow = 2,
heights = c(10, 1),
top = textGrob("OLS vs Fixed Effects Regression Lines", gp = gpar(fontsize = 16, fontface = "bold"))
)
# Save
ggsave("panel_fe_vs_ols.png", panel_with_legend, width = 14, height = 10)
library(ggplot2)
library(dplyr)
library(plm)
library(gridExtra)
library(grid)
# Define variable labels
variable_labels <- c(
"GDP.per.capita..constant.2015.US.." = "GDP per capita (constant USD)",
"Gini.index" = "Gini index (inequality)",
"Poverty.headcount.ratio.at..6.85.a.day..2017.PPP.....of.population." = "Poverty rate ($6.85/day)",
"Access.to.clean.fuels.and.technologies.for.cooking....of.population." = "Clean cooking access",
"Carbon.dioxide..CO2..emissions.excluding.LULUCF.per.capita..t.CO2e.capita." = "CO₂ emissions per capita",
"Proportion.of.population.pushed.below.the..3.65....2017.PPP..poverty.line.by.out.of.pocket.health.care.expenditure...." = "Pushed below $3.65 by health costs"
)
plots <- list()
shared_legend <- NULL
# Temporary plot to extract the shared legend
tmp_plot <- NULL
for (i in seq_along(variable_labels)) {
var <- names(variable_labels)[i]
pretty <- variable_labels[[i]]
df <- data_did %>%
filter(!is.na(!!sym(var)), !is.na(Heritage_Score)) %>%
mutate(Y = !!sym(var))
ols_model <- lm(Y ~ Heritage_Score, data = df)
fe_model <- plm(Y ~ Heritage_Score, data = df, index = c("ISO3", "Year"), model = "within")
ols_slope <- coef(ols_model)["Heritage_Score"]
fe_slope <- coef(fe_model)["Heritage_Score"]
x_vals <- seq(min(df$Heritage_Score), max(df$Heritage_Score), length.out = 100)
lines_data <- data.frame(
x = rep(x_vals, 2),
y = c(coef(ols_model)[1] + ols_slope * x_vals,
mean(df$Y) + fe_slope * (x_vals - mean(df$Heritage_Score))),
Model = rep(c("OLS", "Fixed Effects"), each = 100)
)
p <- ggplot(df, aes(x = Heritage_Score, y = Y)) +
geom_point(alpha = 0.4, size = 1.3) +
geom_line(data = lines_data, aes(x = x, y = y, color = Model, linetype = Model), size = 1) +
scale_color_manual(values = c("OLS" = "blue", "Fixed Effects" = "#E41A1C")) +
scale_linetype_manual(values = c("OLS" = "solid", "Fixed Effects" = "solid")) +
labs(
title = pretty,
x = "Heritage Score",
y = NULL,
color = "Model",
linetype = "Model"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 11, face = "bold"),
legend.position = "none"  # ensure no legend in the grid plots
)
plots[[pretty]] <- p
# Capture the first plot to extract legend later
if (is.null(tmp_plot)) {
tmp_plot <- ggplot(df, aes(x = Heritage_Score, y = Y)) +
geom_point(alpha = 0.4, size = 1.3) +
geom_line(data = lines_data, aes(x = x, y = y, color = Model, linetype = Model), size = 1) +
scale_color_manual(values = c("OLS" = "blue", "Fixed Effects" = "#E41A1C")) +
scale_linetype_manual(values = c("OLS" = "solid", "Fixed Effects" = "solid")) +
labs(
color = "Model",
linetype = "Model"
) +
theme(legend.position = "bottom")
}
}
# Extract shared legend
g <- ggplotGrob(tmp_plot)
shared_legend <- g$grobs[[which(sapply(g$grobs, function(x) x$name) == "guide-box")]]
# Combine grid + legend
panel_with_legend <- grid.arrange(
arrangeGrob(grobs = plots, ncol = 3),
shared_legend,
nrow = 2,
heights = c(10, 1),
top = textGrob("OLS vs Fixed Effects Regression Lines", gp = gpar(fontsize = 16, fontface = "bold"))
)
# Save
ggsave("panel_fe_vs_ols.png", panel_with_legend, width = 14, height = 10)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(grid)
# Variable mapping
variable_labels <- c(
"GDP.per.capita..constant.2015.US.." = "GDP per capita (constant USD)",
"Gini.index" = "Gini index (inequality)",
"Poverty.headcount.ratio.at..6.85.a.day..2017.PPP.....of.population." = "Poverty rate ($6.85/day)",
"Access.to.clean.fuels.and.technologies.for.cooking....of.population." = "Clean cooking access",
"Carbon.dioxide..CO2..emissions.excluding.LULUCF.per.capita..t.CO2e.capita." = "CO₂ emissions per capita",
"Pushed below $3.65 by health costs" = "Pushed.below..3.65.by.health.costs"
)
label_to_column <- setNames(names(variable_labels), variable_labels)
selected_pretty <- unname(variable_labels)
# Prepare plot list
plots <- list()
for (pretty in selected_pretty) {
safe <- label_to_column[[pretty]]
# Skip if column is not in data
if (!(safe %in% colnames(data_did))) next
plot_data <- data_did %>%
filter(!is.na(!!sym(safe))) %>%
group_by(Heritage_Treated, Post_Heritage) %>%
summarize(mean_outcome = mean(!!sym(safe), na.rm = TRUE), .groups = "drop") %>%
mutate(
Group = ifelse(Heritage_Treated == 1, "Treatment", "Control"),
Time = factor(ifelse(Post_Heritage == 1, "Post", "Pre"), levels = c("Pre", "Post"))
)
p <- ggplot(plot_data, aes(x = Time, y = mean_outcome, group = Group, color = Group)) +
geom_line(size = 1.2) +
geom_point(size = 3) +
scale_color_manual(values = c("Treatment" = "#E41A1C", "Control" = "#377EB8")) +
labs(title = pretty, x = NULL, y = NULL, color = "Group") +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 11, face = "bold"),
legend.position = "bottom"
)
plots[[pretty]] <- p
}
# Extract legend from one plot
get_legend <- function(p) {
tmp <- ggplotGrob(p + theme(legend.position = "bottom"))$grobs
legend <- tmp[[which(sapply(tmp, function(x) x$name) == "guide-box")]]
return(legend)
}
shared_legend <- get_legend(plots[[1]])
# Wrap grid + legend into a single grob
panel_grob <- arrangeGrob(
arrangeGrob(grobs = plot_panels, ncol = 3),
shared_legend,
nrow = 2,
heights = c(10, 1),
top = textGrob("Difference-in-Differences Panel", gp = gpar(fontsize = 16, fontface = "bold"))
)
# Save the full composed object
ggsave("panel_did_selected.png", panel_grob, width = 14, height = 10)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(grid)
# Variable mapping
variable_labels <- c(
"GDP.per.capita..constant.2015.US.." = "GDP per capita (constant USD)",
"Gini.index" = "Gini index (inequality)",
"Poverty.headcount.ratio.at..6.85.a.day..2017.PPP.....of.population." = "Poverty rate ($6.85/day)",
"Access.to.clean.fuels.and.technologies.for.cooking....of.population." = "Clean cooking access",
"Carbon.dioxide..CO2..emissions.excluding.LULUCF.per.capita..t.CO2e.capita." = "CO₂ emissions per capita",
"Pushed below $3.65 by health costs" = "Pushed.below..3.65.by.health.costs"
)
label_to_column <- setNames(names(variable_labels), variable_labels)
selected_pretty <- unname(variable_labels)
# Prepare plot list
plots <- list()
for (pretty in selected_pretty) {
safe <- label_to_column[[pretty]]
# Skip if column is not in data
if (!(safe %in% colnames(data_did))) next
plot_data <- data_did %>%
filter(!is.na(!!sym(safe))) %>%
group_by(Heritage_Treated, Post_Heritage) %>%
summarize(mean_outcome = mean(!!sym(safe), na.rm = TRUE), .groups = "drop") %>%
mutate(
Group = ifelse(Heritage_Treated == 1, "Treatment", "Control"),
Time = factor(ifelse(Post_Heritage == 1, "Post", "Pre"), levels = c("Pre", "Post"))
)
p <- ggplot(plot_data, aes(x = Time, y = mean_outcome, group = Group, color = Group)) +
geom_line(size = 1.2) +
geom_point(size = 3) +
scale_color_manual(values = c("Treatment" = "#E41A1C", "Control" = "#377EB8")) +
labs(title = pretty, x = NULL, y = NULL, color = "Group") +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 11, face = "bold"),
legend.position = "bottom"
)
plots[[pretty]] <- p
}
# Extract legend from one plot
get_legend <- function(p) {
tmp <- ggplotGrob(p + theme(legend.position = "bottom"))$grobs
legend <- tmp[[which(sapply(tmp, function(x) x$name) == "guide-box")]]
return(legend)
}
shared_legend <- get_legend(plots[[1]])
# Arrange panel without legends
plot_panels <- lapply(plots, function(p) p + theme(legend.position = "none"))
panel <- grid.arrange(
grobs = plot_panels,
ncol = 3,
top = textGrob("Difference-in-Differences Panel", gp = gpar(fontsize = 16, fontface = "bold")),
bottom = shared_legend
)
# Save
ggsave("panel_did_selected.png", panel, width = 14, height = 9)
View(data_did)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(grid)
# Variable mapping
variable_labels <- c(
"GDP.per.capita..constant.2015.US.." = "GDP per capita (constant USD)",
"Gini.index" = "Gini index (inequality)",
"Poverty.headcount.ratio.at..6.85.a.day..2017.PPP.....of.population." = "Poverty rate ($6.85/day)",
"Access.to.clean.fuels.and.technologies.for.cooking....of.population." = "Clean cooking access",
"Carbon.dioxide..CO2..emissions.excluding.LULUCF.per.capita..t.CO2e.capita." = "CO₂ emissions per capita",
"Proportion.of.population.pushed.below.the..3.65....2017.PPP..poverty.line.by.out.of.pocket.health.care.expenditure...." = "Pushed below $3.65 by health costs"
)
label_to_column <- setNames(names(variable_labels), variable_labels)
selected_pretty <- unname(variable_labels)
# Prepare plot list
plots <- list()
for (pretty in selected_pretty) {
safe <- label_to_column[[pretty]]
# Skip if column is not in data
if (!(safe %in% colnames(data_did))) next
plot_data <- data_did %>%
filter(!is.na(!!sym(safe))) %>%
group_by(Heritage_Treated, Post_Heritage) %>%
summarize(mean_outcome = mean(!!sym(safe), na.rm = TRUE), .groups = "drop") %>%
mutate(
Group = ifelse(Heritage_Treated == 1, "Treatment", "Control"),
Time = factor(ifelse(Post_Heritage == 1, "Post", "Pre"), levels = c("Pre", "Post"))
)
p <- ggplot(plot_data, aes(x = Time, y = mean_outcome, group = Group, color = Group)) +
geom_line(size = 1.2) +
geom_point(size = 3) +
scale_color_manual(values = c("Treatment" = "#E41A1C", "Control" = "#377EB8")) +
labs(title = pretty, x = NULL, y = NULL, color = "Group") +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 11, face = "bold"),
legend.position = "bottom"
)
plots[[pretty]] <- p
}
# Extract legend from one plot
get_legend <- function(p) {
tmp <- ggplotGrob(p + theme(legend.position = "bottom"))$grobs
legend <- tmp[[which(sapply(tmp, function(x) x$name) == "guide-box")]]
return(legend)
}
shared_legend <- get_legend(plots[[1]])
# Arrange panel without legends
plot_panels <- lapply(plots, function(p) p + theme(legend.position = "none"))
panel <- grid.arrange(
grobs = plot_panels,
ncol = 3,
top = textGrob("Difference-in-Differences Panel", gp = gpar(fontsize = 16, fontface = "bold")),
bottom = shared_legend
)
# Save
ggsave("panel_did_selected.png", panel, width = 14, height = 9)
library(ggplot2)
library(png)
library(grid)
library(gridExtra)
library(dplyr)
# Load data
data <- read.csv("merged_data.csv", stringsAsFactors = FALSE)
colnames(data) <- make.names(colnames(data))
# Define pretty ↔ original name map
variable_labels <- c(
"GDP.per.capita..constant.2015.US.." = "GDP per capita (constant USD)",
"Gini.index" = "Gini index (inequality)",
"Poverty.headcount.ratio.at..6.85.a.day..2017.PPP.....of.population." = "Poverty rate ($6.85/day)",
"Access.to.clean.fuels.and.technologies.for.cooking....of.population." = "Clean cooking access",
"Carbon.dioxide..CO2..emissions.excluding.LULUCF.per.capita..t.CO2e.capita." = "CO₂ emissions per capita",
"Proportion.of.population.pushed.below.the..3.65....2017.PPP..poverty.line.by.out.of.pocket.health.care.expenditure...." = "Pushed below $3.65 by health costs"
)
label_to_column <- setNames(names(variable_labels), variable_labels)
# Variables to include in panels
selected_vars <- unname(variable_labels)
# Plot function
make_model_panel <- function(score_col, model_type, folder, output_file) {
dir.create(folder, showWarnings = FALSE)
plots <- list()
for (var_pretty in selected_vars) {
var_safe <- make.names(label_to_column[[var_pretty]])
if (!(var_safe %in% colnames(data))) next
df <- data %>% select(!!score_col, !!sym(var_safe)) %>%
filter(!is.na(!!sym(score_col)), !is.na(!!sym(var_safe)))
if (nrow(df) < 20) next
p <- ggplot(df, aes_string(x = score_col, y = var_safe)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", color = "steelblue") +
labs(title = var_pretty, x = "Heritage Score", y = NULL) +
theme_minimal()
plots[[var_pretty]] <- p
}
# Arrange and save panel
g <- marrangeGrob(grobs = plots, nrow = 2, ncol = 3, top = paste(model_type, "Selected Outcomes"))
ggsave(output_file, g, width = 12, height = 8)
cat("Saved:", output_file, "\n")
}
# Run for all model types (use Heritage_Score for simplicity)
make_model_panel("Heritage_Score", "Linear Regression", "plots_linear_sel", "panel_linear_selected.png")
make_model_panel("Heritage_Score", "Fixed Effects", "plots_fe_sel", "panel_fe_selected.png")
make_model_panel("Heritage_Score", "Difference-in-Differences", "plots_did_sel", "panel_did_selected.png")
library(ggplot2)
library(png)
library(grid)
library(gridExtra)
library(dplyr)
# Load data
data <- read.csv("merged_data.csv", stringsAsFactors = FALSE)
colnames(data) <- make.names(colnames(data))
# Define pretty ↔ original name map
variable_labels <- c(
"GDP.per.capita..constant.2015.US.." = "GDP per capita (constant USD)",
"Gini.index" = "Gini index (inequality)",
"Poverty.headcount.ratio.at..6.85.a.day..2017.PPP.....of.population." = "Poverty rate ($6.85/day)",
"Access.to.clean.fuels.and.technologies.for.cooking....of.population." = "Clean cooking access",
"Carbon.dioxide..CO2..emissions.excluding.LULUCF.per.capita..t.CO2e.capita." = "CO₂ emissions per capita",
"Proportion.of.population.pushed.below.the..3.65....2017.PPP..poverty.line.by.out.of.pocket.health.care.expenditure...." = "Pushed below $3.65 by health costs"
)
label_to_column <- setNames(names(variable_labels), variable_labels)
# Variables to include in panels
selected_vars <- unname(variable_labels)
# Plot function
make_model_panel <- function(score_col, model_type, folder, output_file) {
dir.create(folder, showWarnings = FALSE)
plots <- list()
for (var_pretty in selected_vars) {
var_safe <- names(label_to_column)[match(var_pretty, label_to_column)]
if (!(var_safe %in% colnames(data))) next
df <- data %>% select(!!score_col, !!sym(var_safe)) %>%
filter(!is.na(!!sym(score_col)), !is.na(!!sym(var_safe)))
if (nrow(df) < 20) next
p <- ggplot(df, aes_string(x = score_col, y = var_safe)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", color = "steelblue") +
labs(title = var_pretty, x = "Heritage Score", y = NULL) +
theme_minimal()
plots[[var_pretty]] <- p
}
# Arrange and save panel
g <- marrangeGrob(grobs = plots, nrow = 2, ncol = 3, top = paste(model_type, "Selected Outcomes"))
ggsave(output_file, g, width = 12, height = 8)
cat("Saved:", output_file, "\n")
}
# Run for all model types (use Heritage_Score for simplicity)
make_model_panel("Heritage_Score", "Linear Regression", "plots_linear_sel", "panel_linear_selected.png")
make_model_panel("Heritage_Score", "Fixed Effects", "plots_fe_sel", "panel_fe_selected.png")
make_model_panel("Heritage_Score", "Difference-in-Differences", "plots_did_sel", "panel_did_selected.png")
library(ggplot2)
library(dplyr)
# Load and clean data
data <- read.csv("merged_data.csv", stringsAsFactors = FALSE)
colnames(data) <- make.names(colnames(data))
# Variable mapping: dataset column → plot title
variable_labels <- c(
"GDP.per.capita..constant.2015.US.." = "GDP per capita (constant USD)",
"Gini.index" = "Gini index (inequality)",
"Poverty.headcount.ratio.at..6.85.a.day..2017.PPP.....of.population." = "Poverty rate ($6.85/day)",
"Access.to.clean.fuels.and.technologies.for.cooking....of.population." = "Clean cooking access",
"Carbon.dioxide..CO2..emissions.excluding.LULUCF.per.capita..t.CO2e.capita." = "CO₂ emissions per capita",
"Proportion.of.population.pushed.below.the..3.65....2017.PPP..poverty.line.by.out.of.pocket.health.care.expenditure...." = "Pushed below $3.65 by health costs"
)
# Loop and plot each variable
for (var in names(variable_labels)) {
pretty <- variable_labels[[var]]
df <- data %>%
filter(!is.na(!!sym(var)), !is.na(Heritage_Score)) %>%
mutate(Y = !!sym(var))
p <- ggplot(df, aes(x = Heritage_Score, y = Y)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", color = "steelblue") +
labs(title = paste("Linear Regression:", pretty),
x = "Heritage Score",
y = pretty) +
theme_minimal(base_size = 13)
print(p)
readline(prompt = "Press [enter] to see the next plot...")
}
library(dplyr)
library(ggplot2)
library(visreg)
library(sf)
library(broom)
library(rnaturalearth)
library(rnaturalearthdata)
library(plm)
library(tidyr)
library(readr)
library(gridExtra)
library(grid)
data <- read.csv('merged_data.csv', stringsAsFactors = FALSE)
library(dplyr)
library(ggplot2)
library(visreg)
library(sf)
library(broom)
library(rnaturalearth)
library(rnaturalearthdata)
library(plm)
library(tidyr)
library(readr)
library(gridExtra)
library(grid)
data <- read.csv('merged_data.csv', stringsAsFactors = FALSE)
data <- data[!is.na(data$ISO3), ]
# Remove rows with only ISO3 and Year
cols_to_exclude <- c("ISO3", "Year")
cols_to_check <- setdiff(names(data), cols_to_exclude)
data <- data[!apply(data[, cols_to_check], 1, function(x) all(is.na(x))), ]
# Filter for valid economic freedom scores and years
data <- data %>%
filter(!(is.na(Heritage_Score) & is.na(fraser_Score))) %>%
filter(Year >= 1995)
# Load variable labels
variable_labels <- c(
"GDP.per.capita..constant.2015.US.." = "GDP per capita (constant USD)",
"Gini.index" = "Gini index (inequality)"
# Additional mappings omitted for brevity...
)
# Safely rename
valid_labels <- variable_labels[names(variable_labels) %in% colnames(data)]
renaming_vector <- setNames(names(valid_labels), valid_labels)
data <- data %>% rename(!!!renaming_vector)
sapply(data, function(x) sum(is.na(x)))
outcomes <- unname(valid_labels)
results <- lapply(outcomes, function(var) {
form_heritage <- as.formula(paste0("`", var, "` ~ Heritage_Score"))
form_fraser <- as.formula(paste0("`", var, "` ~ fraser_Score"))
model_heritage <- lm(form_heritage, data = data)
model_fraser <- lm(form_fraser, data = data)
tidy_heritage <- broom::tidy(model_heritage)[2, ]
tidy_fraser <- broom::tidy(model_fraser)[2, ]
data.frame(
Outcome_Label = var,
Coef_Heritage = tidy_heritage$estimate,
P_Heritage = tidy_heritage$p.value,
R2_Heritage = summary(model_heritage)$r.squared,
Coef_Fraser = tidy_fraser$estimate,
P_Fraser = tidy_fraser$p.value,
R2_Fraser = summary(model_fraser)$r.squared
)
})
regression_summary <- do.call(rbind, results) %>%
mutate(Min_P = pmin(P_Heritage, P_Fraser)) %>%
arrange(Min_P)
print(regression_summary)
write.csv(regression_summary, "regression_summary.csv", row.names = FALSE)
